Wiki part:
->DataTables intro
	The front end data management is mostly done with a package imported with JS/CSS called dataTables for jQuery. This table along with Bootstrap's help of mobile first front-end framework allows for a very adaptive table. The current website has six hardcoded dataTables, 3 that represent the schedules of the 3 model teams, and 3 other tables that represent the conference stats, player stats, and team stats. Each of these tables are sortable and searchable because of the dataTable structure which can be seen in the multiple javaScript dataTable files. These files create a table and add in various functions to implement the tables to include the search and sortable features. A reference to DataTables is https://www.datatables.net/ which can be used to modify and add more to the tables. Another reference is to Bootstrap https://www.getbootstrap.com/ which can be useful to add addition front end design preferences to html.
->DataTables in-depth and how to set them up	
	All of the html files that are the tables within the site can be found in the GitHub under no_punt_intended/dataTables/data-tables-bootstrap-3/. This folder also includes css files for both bootstrap and dataTables, images for the ascending and descending images for the tables, and js files for jquery, bootstrap, and dataTables. The tables themselves include the schedules of various teams (purdue_schedule, clemson_schedule, and ut_schedule) and the various model tables (conferenceTable, teamTable, and playerTable). All of these tables are initialized by the call $(‘#nameOfTable’).DataTable(). The additional calls within DataTable are ({ "sDom": "<'row'<'col-xs-6'T><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",  and  “sPaginationType": "bootstrap" }); which allow for the search, sort ability, and pagination of the table. A side note is that these tables are inside a container as a class with the additional bootstrap modifications such as table-striped and table-bordered as usual.
->Linking to schedules/rosters 
	A next step for this project is to include links from within the table, such as the player’s schedule and team roster, which would return to the player’s team schedule for the viewer to see when the player will play. This will be done by including a link in the html code within the table that will link to the appropriate table similarly to the front end design of linking pages together. The issue will come with knowing the appropriate team roster or schedule to link to which most likely could be done by reading in the key value’s id of the player, such as Key:{Nick Jordan} teamValue:{University of Texas}. Then the link can take the viewer to the correct team roster or schedule. 

-> PART 2 additions
->Dynamic table loading
	With the website becoming based on dyanmic loading from API calls, the data tables need to be automatically filled in. This is done by a for loop call in the html, such as {{% for team in conf.teamset %}} <print out data to table> {{% endfor %}}. This will go through all teams within that selected conference and be able to print out their attributes to the table, dynamically. This is continued similarly for all the entire tables looping through teams, conferences, and players to display to correct data. 
->Responsive tables
	An addition added was the data tables being responsive to mobile or tablet devices. The tag <div class="table-responsive"> is added above the table as well as to the (document).ready(function()), "responsive" : true, to allow the tables to shrink down and add a bottom scroll bar to fit a larger table on smaller devices. Future projects can update this feature to include FooTables which break down the table for smaller devices to add a drop down feature for each row that includes the broken off data from the large columns.
->Modals
	On our conference table, the idea of listing out the conference's list of teams on the table didn't make sense, so the idea of a modal came up. This puts a modal button in the table, <button type="button" data-toggle="modal">. This allows the user to click the modal button and the modal body will pop up with the selected conference's teams which are linkable to their pages by attaching the http link with the name of the team by adding {{team.name}} to the href. For more information about modals, reference http://getbootstrap.com/javascript/ and scroll down to the modal's section.